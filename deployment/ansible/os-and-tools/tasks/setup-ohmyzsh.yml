---
- name: Install Powerline fonts
  ansible.builtin.apt:
    state: present
    name: "fonts-powerline"
  become: true

- name: Install zsh
  ansible.builtin.apt:
    pkg: zsh
    state: present
    update_cache: true
  become: true

- name: Set user shell to zsh
  ansible.builtin.user:
    name: "{{ ansible_user_id }}"
    shell: /bin/zsh
  become: true

- name: Install Oh My ZSH
  ansible.builtin.shell: sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended

- name: 'Set var: the oh_my_zsh_plugins_path variable'
  ansible.builtin.set_fact:
    oh_my_zsh_plugins_path: "{{ ansible_env.HOME }}/.oh-my-zsh/custom/plugins/"

# https://github.com/zsh-users/zsh-autosuggestions
- name: Ensure zsh-completions is installed
  block:
    - name: Check if zsh-autosuggestions is already installed
      ansible.builtin.stat:
        path: "{{ oh_my_zsh_plugins_path }}/zsh-autosuggestions"
      register: zsh_autosuggestions_dir
    
    - name: Download zsh-autosuggestions plugin
      ansible.builtin.git:
        repo: https://github.com/zsh-users/zsh-autosuggestions
        dest: "{{ oh_my_zsh_plugins_path }}zsh-autosuggestions"
        depth: 1
      when: not zsh_autosuggestions_dir.stat.exists
      become: false

# https://github.com/zsh-users/zsh-completions
- name: Ensure zsh-completions is installed
  block:
    - name: Check if zsh-completions is already installed
      ansible.builtin.stat:
        path: "{{ oh_my_zsh_plugins_path }}/zsh-completions"
      register: zsh_completions_dir
    
    - name: Download zsh-completions plugin
      ansible.builtin.git:
        repo: https://github.com/zsh-users/zsh-completions
        dest: "{{ oh_my_zsh_plugins_path }}zsh-completions"
        depth: 1
      when: not zsh_completions_dir.stat.exists
      become: false

# https://github.com/zsh-users/zsh-syntax-highlighting
- name: Ensure zsh-syntax-highlighting is installed
  block: 
    - name: Check if zsh-syntax-highlighting is already installed
      ansible.builtin.stat:
        path: "{{ oh_my_zsh_plugins_path }}/zsh-syntax-highlighting"
      register: zsh_syntax_highlighting_dir
    
    - name: Download zsh-syntax-highlighting plugin
      ansible.builtin.git:
        repo: https://github.com/zsh-users/zsh-syntax-highlighting.git
        dest: "{{ oh_my_zsh_plugins_path }}zsh-syntax-highlighting"
        depth: 1
      when: not zsh_syntax_highlighting_dir.stat.exists
      become: false

# https://github.com/romkatv/powerlevel10k
- name: Ensure PowerLevel10K is installed
  block:
    - name: Check if PowerLevel10K is already installed
      ansible.builtin.stat:
        path: "{{ ansible_env.HOME }}/.oh-my-zsh/custom/themes/powerlevel10k"
      register: zsh_power_level_10k_dir
    
    - name: Install PowerLevel10K
      ansible.builtin.git:
        repo: https://github.com/romkatv/powerlevel10k.git
        dest: "{{ ansible_env.HOME }}/.oh-my-zsh/custom/themes/powerlevel10k"
        depth: 1
      when: not zsh_power_level_10k_dir.stat.exists
      become: false

# todo: Add variables to here, user might not want these
- name: Copy zshrc from control node
  ansible.builtin.copy:
    src: "{{ ansible_env.HOME }}/.zshrc"
    dest: "{{ ansible_env.HOME }}/.zshrc"
    mode: "0644"
  become: false

- name: Copy p10k.zsh from control node
  ansible.builtin.copy:
    src: "{{ ansible_env.HOME }}/.p10k.zsh"
    dest: "{{ ansible_env.HOME }}/.p10k.zsh"
    mode: "0644"
  become: false
