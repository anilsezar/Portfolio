// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        v3.12.4
// source: visitor_insights.proto

package proto

import (
	empty "github.com/golang/protobuf/ptypes/empty"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DbOperationForThisRow int32

const (
	DbOperationForThisRow_UNPROCESSED DbOperationForThisRow = 0
	DbOperationForThisRow_UPDATE      DbOperationForThisRow = 1
	DbOperationForThisRow_DELETE      DbOperationForThisRow = 2
)

// Enum value maps for DbOperationForThisRow.
var (
	DbOperationForThisRow_name = map[int32]string{
		0: "UNPROCESSED",
		1: "UPDATE",
		2: "DELETE",
	}
	DbOperationForThisRow_value = map[string]int32{
		"UNPROCESSED": 0,
		"UPDATE":      1,
		"DELETE":      2,
	}
)

func (x DbOperationForThisRow) Enum() *DbOperationForThisRow {
	p := new(DbOperationForThisRow)
	*p = x
	return p
}

func (x DbOperationForThisRow) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DbOperationForThisRow) Descriptor() protoreflect.EnumDescriptor {
	return file_visitor_insights_proto_enumTypes[0].Descriptor()
}

func (DbOperationForThisRow) Type() protoreflect.EnumType {
	return &file_visitor_insights_proto_enumTypes[0]
}

func (x DbOperationForThisRow) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DbOperationForThisRow.Descriptor instead.
func (DbOperationForThisRow) EnumDescriptor() ([]byte, []int) {
	return file_visitor_insights_proto_rawDescGZIP(), []int{0}
}

type GetIpsToCheckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ips           []*IpCheckDto          `protobuf:"bytes,1,rep,name=ips,proto3" json:"ips,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetIpsToCheckResponse) Reset() {
	*x = GetIpsToCheckResponse{}
	mi := &file_visitor_insights_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetIpsToCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIpsToCheckResponse) ProtoMessage() {}

func (x *GetIpsToCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_visitor_insights_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIpsToCheckResponse.ProtoReflect.Descriptor instead.
func (*GetIpsToCheckResponse) Descriptor() ([]byte, []int) {
	return file_visitor_insights_proto_rawDescGZIP(), []int{0}
}

func (x *GetIpsToCheckResponse) GetIps() []*IpCheckDto {
	if x != nil {
		return x.Ips
	}
	return nil
}

type PersistCheckedIpsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CheckedIps    []*IpCheckDto          `protobuf:"bytes,1,rep,name=checkedIps,proto3" json:"checkedIps,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PersistCheckedIpsRequest) Reset() {
	*x = PersistCheckedIpsRequest{}
	mi := &file_visitor_insights_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PersistCheckedIpsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PersistCheckedIpsRequest) ProtoMessage() {}

func (x *PersistCheckedIpsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_visitor_insights_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PersistCheckedIpsRequest.ProtoReflect.Descriptor instead.
func (*PersistCheckedIpsRequest) Descriptor() ([]byte, []int) {
	return file_visitor_insights_proto_rawDescGZIP(), []int{1}
}

func (x *PersistCheckedIpsRequest) GetCheckedIps() []*IpCheckDto {
	if x != nil {
		return x.CheckedIps
	}
	return nil
}

type IpCheckDto struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EntityId      int32                  `protobuf:"varint,1,opt,name=entityId,proto3" json:"entityId,omitempty"`
	IpAddress     string                 `protobuf:"bytes,2,opt,name=ipAddress,proto3" json:"ipAddress,omitempty"`
	City          string                 `protobuf:"bytes,3,opt,name=city,proto3" json:"city,omitempty"`
	Country       string                 `protobuf:"bytes,4,opt,name=country,proto3" json:"country,omitempty"`
	Operation     DbOperationForThisRow  `protobuf:"varint,5,opt,name=operation,proto3,enum=client_info.DbOperationForThisRow" json:"operation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IpCheckDto) Reset() {
	*x = IpCheckDto{}
	mi := &file_visitor_insights_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IpCheckDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IpCheckDto) ProtoMessage() {}

func (x *IpCheckDto) ProtoReflect() protoreflect.Message {
	mi := &file_visitor_insights_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IpCheckDto.ProtoReflect.Descriptor instead.
func (*IpCheckDto) Descriptor() ([]byte, []int) {
	return file_visitor_insights_proto_rawDescGZIP(), []int{2}
}

func (x *IpCheckDto) GetEntityId() int32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

func (x *IpCheckDto) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *IpCheckDto) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *IpCheckDto) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *IpCheckDto) GetOperation() DbOperationForThisRow {
	if x != nil {
		return x.Operation
	}
	return DbOperationForThisRow_UNPROCESSED
}

type StoreVisitorInfoRequest struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	UserAgent           string                 `protobuf:"bytes,1,opt,name=userAgent,proto3" json:"userAgent,omitempty"`
	Language            string                 `protobuf:"bytes,2,opt,name=language,proto3" json:"language,omitempty"`
	Platform            string                 `protobuf:"bytes,3,opt,name=platform,proto3" json:"platform,omitempty"`
	Webdriver           bool                   `protobuf:"varint,4,opt,name=webdriver,proto3" json:"webdriver,omitempty"`
	DeviceMemory        string                 `protobuf:"bytes,5,opt,name=deviceMemory,proto3" json:"deviceMemory,omitempty"`
	HardwareConcurrency string                 `protobuf:"bytes,6,opt,name=hardwareConcurrency,proto3" json:"hardwareConcurrency,omitempty"`
	MaxTouchPoints      int32                  `protobuf:"varint,7,opt,name=maxTouchPoints,proto3" json:"maxTouchPoints,omitempty"`
	DoNotTrack          string                 `protobuf:"bytes,8,opt,name=doNotTrack,proto3" json:"doNotTrack,omitempty"`
	Connection          string                 `protobuf:"bytes,9,opt,name=connection,proto3" json:"connection,omitempty"`
	CookieEnabled       bool                   `protobuf:"varint,10,opt,name=cookieEnabled,proto3" json:"cookieEnabled,omitempty"`
	OnLine              bool                   `protobuf:"varint,11,opt,name=onLine,proto3" json:"onLine,omitempty"`
	Referrer            string                 `protobuf:"bytes,12,opt,name=referrer,proto3" json:"referrer,omitempty"`
	Resolution          string                 `protobuf:"bytes,13,opt,name=resolution,proto3" json:"resolution,omitempty"`
	IpAddress           string                 `protobuf:"bytes,14,opt,name=ipAddress,proto3" json:"ipAddress,omitempty"`
	Extras              string                 `protobuf:"bytes,15,opt,name=extras,proto3" json:"extras,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *StoreVisitorInfoRequest) Reset() {
	*x = StoreVisitorInfoRequest{}
	mi := &file_visitor_insights_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreVisitorInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreVisitorInfoRequest) ProtoMessage() {}

func (x *StoreVisitorInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_visitor_insights_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreVisitorInfoRequest.ProtoReflect.Descriptor instead.
func (*StoreVisitorInfoRequest) Descriptor() ([]byte, []int) {
	return file_visitor_insights_proto_rawDescGZIP(), []int{3}
}

func (x *StoreVisitorInfoRequest) GetUserAgent() string {
	if x != nil {
		return x.UserAgent
	}
	return ""
}

func (x *StoreVisitorInfoRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *StoreVisitorInfoRequest) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *StoreVisitorInfoRequest) GetWebdriver() bool {
	if x != nil {
		return x.Webdriver
	}
	return false
}

func (x *StoreVisitorInfoRequest) GetDeviceMemory() string {
	if x != nil {
		return x.DeviceMemory
	}
	return ""
}

func (x *StoreVisitorInfoRequest) GetHardwareConcurrency() string {
	if x != nil {
		return x.HardwareConcurrency
	}
	return ""
}

func (x *StoreVisitorInfoRequest) GetMaxTouchPoints() int32 {
	if x != nil {
		return x.MaxTouchPoints
	}
	return 0
}

func (x *StoreVisitorInfoRequest) GetDoNotTrack() string {
	if x != nil {
		return x.DoNotTrack
	}
	return ""
}

func (x *StoreVisitorInfoRequest) GetConnection() string {
	if x != nil {
		return x.Connection
	}
	return ""
}

func (x *StoreVisitorInfoRequest) GetCookieEnabled() bool {
	if x != nil {
		return x.CookieEnabled
	}
	return false
}

func (x *StoreVisitorInfoRequest) GetOnLine() bool {
	if x != nil {
		return x.OnLine
	}
	return false
}

func (x *StoreVisitorInfoRequest) GetReferrer() string {
	if x != nil {
		return x.Referrer
	}
	return ""
}

func (x *StoreVisitorInfoRequest) GetResolution() string {
	if x != nil {
		return x.Resolution
	}
	return ""
}

func (x *StoreVisitorInfoRequest) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *StoreVisitorInfoRequest) GetExtras() string {
	if x != nil {
		return x.Extras
	}
	return ""
}

var File_visitor_insights_proto protoreflect.FileDescriptor

var file_visitor_insights_proto_rawDesc = []byte{
	0x0a, 0x16, 0x76, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x6e, 0x73, 0x69, 0x67, 0x68,
	0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x42, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x49, 0x70, 0x73, 0x54, 0x6f, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x03, 0x69,
	0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x49, 0x70, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x74,
	0x6f, 0x52, 0x03, 0x69, 0x70, 0x73, 0x22, 0x53, 0x0a, 0x18, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73,
	0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x49, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x37, 0x0a, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x49, 0x70, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x49, 0x70, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x74, 0x6f, 0x52,
	0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x49, 0x70, 0x73, 0x22, 0xb6, 0x01, 0x0a, 0x0a,
	0x49, 0x70, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x74, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x40, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x2e, 0x44, 0x62, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46,
	0x6f, 0x72, 0x54, 0x68, 0x69, 0x73, 0x52, 0x6f, 0x77, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0xfb, 0x03, 0x0a, 0x17, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x56, 0x69,
	0x73, 0x69, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x77, 0x65, 0x62, 0x64, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x77, 0x65, 0x62, 0x64, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x30, 0x0a, 0x13, 0x68, 0x61, 0x72, 0x64,
	0x77, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x43,
	0x6f, 0x6e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x6d, 0x61,
	0x78, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0e, 0x6d, 0x61, 0x78, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x6f, 0x4e, 0x6f, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x6f, 0x4e, 0x6f, 0x74, 0x54, 0x72, 0x61,
	0x63, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x63, 0x6f, 0x6f, 0x6b, 0x69,
	0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x6e, 0x4c, 0x69,
	0x6e, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6f, 0x6e, 0x4c, 0x69, 0x6e, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a,
	0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09,
	0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78,
	0x74, 0x72, 0x61, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x78, 0x74, 0x72,
	0x61, 0x73, 0x2a, 0x40, 0x0a, 0x15, 0x44, 0x62, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x46, 0x6f, 0x72, 0x54, 0x68, 0x69, 0x73, 0x52, 0x6f, 0x77, 0x12, 0x0f, 0x0a, 0x0b, 0x55,
	0x4e, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06,
	0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45, 0x4c, 0x45,
	0x54, 0x45, 0x10, 0x02, 0x32, 0x84, 0x02, 0x0a, 0x0f, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x49, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x73, 0x12, 0x4b, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x49,
	0x70, 0x73, 0x54, 0x6f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x22, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e,
	0x47, 0x65, 0x74, 0x49, 0x70, 0x73, 0x54, 0x6f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x11, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x49, 0x70, 0x73, 0x12, 0x25, 0x2e, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x49, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x50, 0x0a, 0x10, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x2e,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x19, 0x5a, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0xaa, 0x02, 0x0e, 0x50, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69,
	0x6f, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_visitor_insights_proto_rawDescOnce sync.Once
	file_visitor_insights_proto_rawDescData = file_visitor_insights_proto_rawDesc
)

func file_visitor_insights_proto_rawDescGZIP() []byte {
	file_visitor_insights_proto_rawDescOnce.Do(func() {
		file_visitor_insights_proto_rawDescData = protoimpl.X.CompressGZIP(file_visitor_insights_proto_rawDescData)
	})
	return file_visitor_insights_proto_rawDescData
}

var file_visitor_insights_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_visitor_insights_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_visitor_insights_proto_goTypes = []any{
	(DbOperationForThisRow)(0),       // 0: client_info.DbOperationForThisRow
	(*GetIpsToCheckResponse)(nil),    // 1: client_info.GetIpsToCheckResponse
	(*PersistCheckedIpsRequest)(nil), // 2: client_info.PersistCheckedIpsRequest
	(*IpCheckDto)(nil),               // 3: client_info.IpCheckDto
	(*StoreVisitorInfoRequest)(nil),  // 4: client_info.StoreVisitorInfoRequest
	(*empty.Empty)(nil),              // 5: google.protobuf.Empty
}
var file_visitor_insights_proto_depIdxs = []int32{
	3, // 0: client_info.GetIpsToCheckResponse.ips:type_name -> client_info.IpCheckDto
	3, // 1: client_info.PersistCheckedIpsRequest.checkedIps:type_name -> client_info.IpCheckDto
	0, // 2: client_info.IpCheckDto.operation:type_name -> client_info.DbOperationForThisRow
	5, // 3: client_info.VisitorInsights.GetIpsToCheck:input_type -> google.protobuf.Empty
	2, // 4: client_info.VisitorInsights.PersistCheckedIps:input_type -> client_info.PersistCheckedIpsRequest
	4, // 5: client_info.VisitorInsights.StoreVisitorInfo:input_type -> client_info.StoreVisitorInfoRequest
	1, // 6: client_info.VisitorInsights.GetIpsToCheck:output_type -> client_info.GetIpsToCheckResponse
	5, // 7: client_info.VisitorInsights.PersistCheckedIps:output_type -> google.protobuf.Empty
	5, // 8: client_info.VisitorInsights.StoreVisitorInfo:output_type -> google.protobuf.Empty
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_visitor_insights_proto_init() }
func file_visitor_insights_proto_init() {
	if File_visitor_insights_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_visitor_insights_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_visitor_insights_proto_goTypes,
		DependencyIndexes: file_visitor_insights_proto_depIdxs,
		EnumInfos:         file_visitor_insights_proto_enumTypes,
		MessageInfos:      file_visitor_insights_proto_msgTypes,
	}.Build()
	File_visitor_insights_proto = out.File
	file_visitor_insights_proto_rawDesc = nil
	file_visitor_insights_proto_goTypes = nil
	file_visitor_insights_proto_depIdxs = nil
}
